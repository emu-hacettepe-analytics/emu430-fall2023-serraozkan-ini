[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the 4k1e_rda project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to our project website.\nSummary\nOur project will focus on the rate of different types of crime depending on the years between 2011 and 2020. Depending on the outcome, genders and educational statuses of criminals might be considered as well.\nWe got our data from the Turkish Statistical Institution website. It consists of the year the crime was committed, the type of crime, the criminal’s gender and educational status.\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Serra Özkan!\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "For the first part of the assignment I was required to scrap Turkish movie data from the IMDB site using the advanced movie search. You can see the code I used to scrap the html and tidy it into a data frame called movie_info.\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(stringr)\n\nsite_2010 &lt;- read_html(\"https://m.imdb.com/search/title/?title_type=feature&release_date=,2010-01-01&num_votes=2500,&country_of_origin=TR&count=250\")\nmovies_1 &lt;- site_2010 |&gt; html_elements(\"h3\") |&gt; html_text()\n\nsite_2023 &lt;- read_html(\"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,&num_votes=2500,&country_of_origin=TR&count=250\")\nmovies_2 &lt;- site_2023 |&gt; html_elements(\"h3\") |&gt; html_text()\n\nmovies &lt;- c(movies_1, movies_2)\nmovies &lt;- movies[! movies == \"Recently viewed\"]\nmovies &lt;- data.frame(movies) |&gt;\n  separate(movies, into = c(\"number\", \"titles\"), sep = \". \", extra = \"merge\")\nmovies &lt;- movies[,2] |&gt; data.frame()\ncolnames(movies) &lt;- c(\"title\")\n\nrates_1 &lt;- site_2010 |&gt; \n  html_elements(\".dli-ratings-container\") |&gt; \n  html_text() |&gt; \n  substr(0,3)\n\nrates_2 &lt;- site_2023 |&gt; \n  html_elements(\".dli-ratings-container\") |&gt; \n  html_text() |&gt; \n  substr(0,3)\n\nrates &lt;- c(rates_1, rates_2) |&gt; as.numeric() |&gt; data.frame() \ncolnames(rates) &lt;- c(\"rate\")\n\ndli_1 &lt;- site_2010 |&gt; \n  html_elements(\".dli-title-metadata-item\") |&gt; \n  html_text()\n\ndli_2 &lt;- site_2023 |&gt; \n  html_elements(\".dli-title-metadata-item\") |&gt; \n  html_text()\n\nyears &lt;- c(dli_1 |&gt; str_extract(\"\\\\d{4}\") |&gt; as.numeric(), \n           dli_2 |&gt; str_extract(\"\\\\d{4}\") |&gt; as.numeric())\n\nyears &lt;- years[complete.cases(years)] |&gt; data.frame()\ncolnames(years) &lt;- c(\"year\")\n\ndur_detect &lt;- c(dli_1 |&gt; str_detect(\"[hm]\"), dli_2 |&gt; str_detect(\"[hm]\"))\ndurations &lt;- c(dli_1,dli_2)[dur_detect] |&gt; data.frame()\ncolnames(durations) &lt;- c(\"duration\")\n\nvote_read &lt;- c(site_2010 |&gt; html_elements(\".kRnqtn\") |&gt; html_text(), \n               site_2023 |&gt; html_elements(\".kRnqtn\") |&gt; html_text()) |&gt;\n  substring(6, last = 10000) |&gt; \n  str_replace(\",\", \"\") |&gt;\n  as.numeric() |&gt;\n  data.frame()\n\ncolnames(vote_read) &lt;- c(\"votes\")\n\nmovie_info &lt;- data.frame(movies, years, rates, vote_read, durations)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "B.S., Industrial Engineering, Hacettepe University, Turkey, 2020 - ongoing.\nHighschool, Dr. Binnaz - Dr. Rıdvan Ege Anadolu Lisesi, 2016-2020"
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nFirm xxx, position xx, year xxx\nFirm yyy, position yyy, year yyy"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nInovasyon Muhendislik Ltd. Şti. , Project Management Intern, 2023 August\nTürk HENKEL Ankara Plant, Liquid Production Intern, 2023 September"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "I chose to summarize the talk Tom Mock made introducing Quarto.\nIn this talk Tom Mock generally talks about the process they went through with his partners while working on Quarto, the reactions they received when they started to talk about it and the situation with RMarkdown.\nWhile starting the talk he briefly goes over some of the reactions they received and proceeds to give some technical information on Quarto. Like what languages it works with and what is to be expected of Quarto.\nNext, he gives information on how they improved on the fundamentals of RMarkdown’s working process for literate programming. After explaining what goes on in the background when we publish a file with Quarto, he illustrates usage scenarios with some chunks of code.\nAfter elaborating on the perks that come with using Quarto (like adaptability with several editors) he concludes his talk by showing his gratitude to the development team."
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the Fall 2023 EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on December 28, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-1.html#section-a",
    "href": "assignments/assignment-1.html#section-a",
    "title": "Assignment 1",
    "section": "",
    "text": "I chose to summarize the talk Tom Mock made introducing Quarto.\nIn this talk Tom Mock generally talks about the process they went through with his partners while working on Quarto, the reactions they received when they started to talk about it and the situation with RMarkdown.\nWhile starting the talk he briefly goes over some of the reactions they received and proceeds to give some technical information on Quarto. Like what languages it works with and what is to be expected of Quarto.\nNext, he gives information on how they improved on the fundamentals of RMarkdown’s working process for literate programming. After explaining what goes on in the background when we publish a file with Quarto, he illustrates usage scenarios with some chunks of code.\nAfter elaborating on the perks that come with using Quarto (like adaptability with several editors) he concludes his talk by showing his gratitude to the development team."
  },
  {
    "objectID": "assignments/assignment-1.html#section-b",
    "href": "assignments/assignment-1.html#section-b",
    "title": "Assignment 1",
    "section": "Section B:",
    "text": "Section B:\n1 - While we use “&lt;-” to assign values to variables in R,\n\nmy_var &lt;- 42\n\nWe use “=” to assign values to variables in Python.\n\nmy_var = 42\n\n2 - While “functionName &lt;- function(x)” assignment is used to create functions in R,\n\nmy_var &lt;- function(x,y) {\n  x+y\n  }\n\nWe use “def” to create functions in Python.\n\ndef functionName(x,y):\n  return x+y\n\n3- R’s list has the ability to contain different types of variables which is pretty different from that of Python’s.\nR example:\n\nsomeVar &lt;- c(8,9,0)\nsomeNames &lt;- c(\"One\", \"Two\", \"Three\")\nsomeDict &lt;- data.frame(someVar,someNames)\n\nsomeList &lt;- list(someVar, someNames)\n\nPython example:\n\npList = [\"s\",\"i\",\"m\",\"p\",\"l\",\"e\"]"
  },
  {
    "objectID": "assignments/assignment-1.html#section-c",
    "href": "assignments/assignment-1.html#section-c",
    "title": "Assignment 1",
    "section": "Section C",
    "text": "Section C\n\nlibrary(dslabs)\nvarName &lt;- c(na_example)\nvarName\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\nsum(is.na(varName))\n\n[1] 145\n\nvarName[is.na(varName)] &lt;- 0\nvarName\n\n   [1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4 1 1 1 4\n  [38] 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0 1 0 4 1 2 2 3 2\n  [75] 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1 1 4 1 1 2 3 3 2 2 3 3 3\n [112] 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4\n [149] 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1\n [186] 3 1 1 0 0 3 5 2 2 2 3 1 2 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1\n [223] 1 2 3 1 1 1 4 3 4 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3\n [260] 4 6 2 2 2 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3\n [297] 1 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0 2 1 1\n [334] 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1 2 2 1 2 2 6 1\n [371] 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2 0 1 2 1 1 4 2 1 4 4 0\n [408] 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4\n [445] 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1\n [482] 2 2 2 3 2 3 1 1 0 3 2 1 1 2 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1\n [519] 2 5 1 1 2 2 1 1 0 1 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1\n [556] 3 1 3 2 4 0 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2\n [593] 2 2 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1 1 3\n [630] 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3 2 4 2 2 4 0\n [667] 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6 2 0 4 1 3 1 2 0 1 1\n [704] 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0 1 2 2 2 2 4 5 0 0 0 4 3 3 3\n [741] 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2\n [778] 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3\n [815] 1 5 2 2 4 2 0 1 3 1 2 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3\n [852] 1 0 5 5 2 2 2 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3\n [889] 3 2 2 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0 0\n [926] 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2 3 1 2 3 0\n [963] 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0 1 1 2 2 1 1 2 2 0\n[1000] 2\n\nsum(is.na(varName))\n\n[1] 0"
  },
  {
    "objectID": "assignments/assignment-2.html#scraping-and-tidying",
    "href": "assignments/assignment-2.html#scraping-and-tidying",
    "title": "Assignment 2",
    "section": "",
    "text": "For the first part of the assignment I was required to scrap Turkish movie data from the IMDB site using the advanced movie search. You can see the code I used to scrap the html and tidy it into a data frame called movie_info.\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(stringr)\n\nsite_2010 &lt;- read_html(\"https://m.imdb.com/search/title/?title_type=feature&release_date=,2010-01-01&num_votes=2500,&country_of_origin=TR&count=250\")\nmovies_1 &lt;- site_2010 |&gt; html_elements(\"h3\") |&gt; html_text()\n\nsite_2023 &lt;- read_html(\"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,&num_votes=2500,&country_of_origin=TR&count=250\")\nmovies_2 &lt;- site_2023 |&gt; html_elements(\"h3\") |&gt; html_text()\n\nmovies &lt;- c(movies_1, movies_2)\nmovies &lt;- movies[! movies == \"Recently viewed\"]\nmovies &lt;- data.frame(movies) |&gt;\n  separate(movies, into = c(\"number\", \"titles\"), sep = \". \", extra = \"merge\")\nmovies &lt;- movies[,2] |&gt; data.frame()\ncolnames(movies) &lt;- c(\"title\")\n\nrates_1 &lt;- site_2010 |&gt; \n  html_elements(\".dli-ratings-container\") |&gt; \n  html_text() |&gt; \n  substr(0,3)\n\nrates_2 &lt;- site_2023 |&gt; \n  html_elements(\".dli-ratings-container\") |&gt; \n  html_text() |&gt; \n  substr(0,3)\n\nrates &lt;- c(rates_1, rates_2) |&gt; as.numeric() |&gt; data.frame() \ncolnames(rates) &lt;- c(\"rate\")\n\ndli_1 &lt;- site_2010 |&gt; \n  html_elements(\".dli-title-metadata-item\") |&gt; \n  html_text()\n\ndli_2 &lt;- site_2023 |&gt; \n  html_elements(\".dli-title-metadata-item\") |&gt; \n  html_text()\n\nyears &lt;- c(dli_1 |&gt; str_extract(\"\\\\d{4}\") |&gt; as.numeric(), \n           dli_2 |&gt; str_extract(\"\\\\d{4}\") |&gt; as.numeric())\n\nyears &lt;- years[complete.cases(years)] |&gt; data.frame()\ncolnames(years) &lt;- c(\"year\")\n\ndur_detect &lt;- c(dli_1 |&gt; str_detect(\"[hm]\"), dli_2 |&gt; str_detect(\"[hm]\"))\ndurations &lt;- c(dli_1,dli_2)[dur_detect] |&gt; data.frame()\ncolnames(durations) &lt;- c(\"duration\")\n\nvote_read &lt;- c(site_2010 |&gt; html_elements(\".kRnqtn\") |&gt; html_text(), \n               site_2023 |&gt; html_elements(\".kRnqtn\") |&gt; html_text()) |&gt;\n  substring(6, last = 10000) |&gt; \n  str_replace(\",\", \"\") |&gt;\n  as.numeric() |&gt;\n  data.frame()\n\ncolnames(vote_read) &lt;- c(\"votes\")\n\nmovie_info &lt;- data.frame(movies, years, rates, vote_read, durations)\n\n\n\n\n\n\nCode\nmovie_info &lt;- arrange(movie_info, desc(rate))\nfirst_5 &lt;- movie_info[1:5,1:3]\nlast_5 &lt;- tail(movie_info[,1:3], n=5)\nfirst_5\n\n\n                         title year rate\n1               Hababam Sinifi 1975  9.2\n2       CM101MMXI Fundamentals 2013  9.1\n3                   Tosun Pasa 1976  8.9\n4 Hababam Sinifi Sinifta Kaldi 1975  8.9\n5                Süt Kardesler 1976  8.8\n\n\n\n\n\n\n\n                             title year rate\n466                 Cumali Ceber 2 2018  1.2\n467                          Müjde 2022  1.2\n468              15/07 Safak Vakti 2021  1.2\n469 Cumali Ceber: Allah Seni Alsin 2017  1.0\n470                           Reis 2017  1.0\n\n\nOut of the top rated movies, I have watched all except for Tosun Pasa. Since the IMDb ratings are based on subjective rates of people, although I think there are movies which deserve top 5 more, I can not say that these movies do not deserve their ratings. The bottom rated movies however, are disliked by the majority of the users so there must be something wrong with them to receive these ratings.\n\n\n\n\n\n      title year rate votes duration\n39 G.O.R.A. 2004    8 66029    2h 7m\n\n\n    title year rate votes duration\n90 Mucize 2015  7.6 13894   2h 16m\n\n\nI adore G.O.R.A. and Mucize. I think both got the ratings they deserved, but Mucize has a special place in my heart with its beautiful sceneries, convincing acting and accents, good ending, and emotional story.\n\n\n\nYearly rating averages:\n\n\nCode\ngrouped_rate &lt;- group_by(movie_info, year) |&gt; summarise(rate_avg = mean(rate))\n\nplot_rate &lt;- ggplot(grouped_rate, aes(year, rate_avg)) +\n  geom_point(col = \"#CC0066\")\n\nplot_rate\n\n\n\n\n\nNumber of movies over the years:\n\n\nCode\ngrouped_num &lt;- group_by(movie_info, year) |&gt; summarise(n_movies = n())\n\nplot_num &lt;- ggplot(grouped_num, aes(year, n_movies)) +\n  geom_point(col = \"#330066\")\n\nplot_num\n\n\n\n\n\nBox plots of ratings over the years:\n\n\nCode\nplot_box &lt;- ggplot(movie_info, aes(factor(year), rate)) +\n  geom_boxplot(fill = \"#339999\")+\n  xlab(\"year\")+\n  ylab(\"rate\")+\n  theme(axis.text.x = element_text(angle = 90))\n\nplot_box\n\n\n\n\n\nThe box plot shows that other than a few exceptions means and lower quantiles for movie ratings tend to drop over the years. And the lowest rated movies also appear in more recent years.\nVotes vs Rate:\n\n\nCode\nplot_votes &lt;- ggplot(movie_info, aes(rate, votes)) +\n  geom_point(col = \"#333366\")+\n  scale_y_log10()+\n  ylab(\"votes (scaled by log10)\")\n\nplot_votes\n\n\n\n\n\nCode\ngrouped_rate &lt;- group_by(movie_info, rate) |&gt; summarise(vote_avg = mean(votes))\n\nplot_vote_avg &lt;- ggplot(grouped_rate, aes(rate, vote_avg)) +\n  geom_point(col = \"#005566\")\n\nplot_vote_avg\n\n\n\n\n\nThe only conclusion we can come to out of these two plots is that movies with really high ratings tend to have higher votes, which can be caused by more people watching them because they are good already? Seems pretty natural."
  },
  {
    "objectID": "assignments/assignment-2.html#a",
    "href": "assignments/assignment-2.html#a",
    "title": "Assignment 2",
    "section": "a)",
    "text": "a)\n\nThe 5 Top Rated movies:\n\n\nCode\nmovie_info &lt;- arrange(movie_info, desc(rate))\nfirst_5 &lt;- movie_info[1:5,1:3]\nlast_5 &lt;- tail(movie_info[,1:3], n=5)\nfirst_5\n\n\n                         title year rate\n1               Hababam Sinifi 1975  9.2\n2       CM101MMXI Fundamentals 2013  9.1\n3                   Tosun Pasa 1976  8.9\n4 Hababam Sinifi Sinifta Kaldi 1975  8.9\n5                Süt Kardesler 1976  8.8\n\n\n\n\nThe 5 Worst Rated movies:\n\n\n                             title year rate\n466                 Cumali Ceber 2 2018  1.2\n467                          Müjde 2022  1.2\n468              15/07 Safak Vakti 2021  1.2\n469 Cumali Ceber: Allah Seni Alsin 2017  1.0\n470                           Reis 2017  1.0\n\n\nOut of the top rated movies, I have watched all except for Tosun Pasa. Since the IMDb ratings are based on subjective rates of people, although I think there are movies which deserve top 5 more, I can not say that these movies do not deserve their ratings. The bottom rated movies however, are disliked by the majority of the users so there must be something wrong with them to receive these ratings."
  },
  {
    "objectID": "assignments/assignment-2.html#b",
    "href": "assignments/assignment-2.html#b",
    "title": "Assignment 2",
    "section": "b)",
    "text": "b)\n\nMy Favorites\n\n\n      title year rate votes duration\n39 G.O.R.A. 2004    8 66033    2h 7m\n\n\n    title year rate votes duration\n90 Mucize 2015  7.6 13899   2h 16m\n\n\nI adore G.O.R.A. and Mucize. I think both got the ratings they deserved, but Mucize has a special place in my heart with its beautiful sceneries, convincing acting and accents, good ending, and emotional story."
  },
  {
    "objectID": "assignments/assignment-2.html#c",
    "href": "assignments/assignment-2.html#c",
    "title": "Assignment 2",
    "section": "c)",
    "text": "c)\n\nExtracting Knowledge out of Data\nYearly rating averages:\n\n\nCode\ngrouped_rate &lt;- group_by(movie_info, year) |&gt; summarise(rate_avg = mean(rate))\n\nplot_rate &lt;- ggplot(grouped_rate, aes(year, rate_avg)) +\n  geom_point(col = \"#CC0066\")\n\nplot_rate\n\n\n\n\n\nNumber of movies over the years:\n\n\nCode\ngrouped_num &lt;- group_by(movie_info, year) |&gt; summarise(n_movies = n())\n\nplot_num &lt;- ggplot(grouped_num, aes(year, n_movies)) +\n  geom_point(col = \"#330066\")\n\nplot_num\n\n\n\n\n\nBox plots of ratings over the years:\n\n\nCode\nplot_box &lt;- ggplot(movie_info, aes(factor(year), rate)) +\n  geom_boxplot(fill = \"#339999\")+\n  xlab(\"year\")+\n  ylab(\"rate\")+\n  theme(axis.text.x = element_text(angle = 90))\n\nplot_box\n\n\n\n\n\nThe box plot shows that other than a few exceptions means and lower quantiles for movie ratings tend to drop over the years. And the lowest rated movies also appear in more recent years."
  },
  {
    "objectID": "assignments/assignment-2.html#d",
    "href": "assignments/assignment-2.html#d",
    "title": "Assignment 2",
    "section": "d)",
    "text": "d)\n\nVotes vs Rate:\n\n\nCode\ngrouped_rate &lt;- group_by(movie_info, rate) |&gt; summarise(vote_avg = mean(votes))\n\nplot_vote_avg &lt;- ggplot(grouped_rate, aes(rate, vote_avg)) +\n  geom_point(col = \"#005566\")\n\nplot_vote_avg\n\n\n\n\n\nThe only conclusion we can come to from this plot is that movies with really high ratings tend to have higher votes, which can be caused by more people watching them because they are good already? Seems pretty natural."
  },
  {
    "objectID": "assignments/assignment-2.html#e",
    "href": "assignments/assignment-2.html#e",
    "title": "Assignment 2",
    "section": "e)",
    "text": "e)\n\nDuration vs Rate\n\n\nCode\ngrouped_duration &lt;- group_by(movie_info, duration) |&gt; summarise(rate = mean(rate))\n\nplot_dur &lt;- ggplot(grouped_duration, aes(duration, rate)) +\n  geom_point(col = \"#FF33CC\")+\n  theme(axis.text.x = element_text(angle = 90))\n\nplot_dur\n\n\n\n\n\nNo. Maybe “extreme duration = bad rating” but that is pretty much it."
  },
  {
    "objectID": "assignments/assignment-2.html#turkish-movies-in-top-1000",
    "href": "assignments/assignment-2.html#turkish-movies-in-top-1000",
    "title": "Assignment 2",
    "section": "Turkish Movies in Top 1000",
    "text": "Turkish Movies in Top 1000\n\n\nCode\nsite_top1000 &lt;- read_html(\"https://m.imdb.com/search/title/?title_type=feature&groups=top_1000&country_of_origin=TR\")\ntop1000_title &lt;- site_top1000 |&gt; html_elements(\"h3\") |&gt; html_text()\ntop1000_title &lt;- top1000_title[! top1000_title == \"Recently viewed\"]\ntop1000_title &lt;- data.frame(top1000_title) |&gt;\n  separate(top1000_title, into = c(\"number\", \"titles\"), sep = \". \", extra = \"merge\")\ntop1000_title &lt;- data.frame(top1000_title$titles)\ncolnames(top1000_title) &lt;- c(\"title\")\n\ntop1000_year &lt;- site_top1000 |&gt; html_elements(\".dli-title-metadata-item\") |&gt; html_text()\ntop1000_year &lt;- c(top1000_year |&gt; str_extract(\"\\\\d{4}\") |&gt; as.numeric())\ntop1000_year &lt;- top1000_year[complete.cases(top1000_year)] |&gt; data.frame()\ncolnames(top1000_year) &lt;- c(\"year\")\n\ntop1000 &lt;- data.frame(top1000_title,top1000_year)\n\njoined_df &lt;- left_join(top1000, movie_info, by = \"title\")\n\njoined_df &lt;- joined_df[order(desc(joined_df$rate)),]\njoined_df\n\n\n                       title year.x year.y rate votes duration\n4  Ayla: The Daughter of War   2017   2017  8.3 42992    2h 5m\n1   Yedinci Kogustaki Mucize   2019   2019  8.2 54171   2h 12m\n5             Babam ve Oglum   2005   2005  8.2 91035   1h 48m\n8                     Eskiya   1996   1996  8.1 71704    2h 8m\n11  Her Sey Çok Güzel Olacak   1998   1998  8.1 27122   1h 47m\n2                 Kis Uykusu   2014   2014  8.0 54646   3h 16m\n3      Nefes: Vatan Sagolsun   2009   2009  8.0 35022    2h 8m\n6                Ahlat Agaci   2018   2018  8.0 27015    3h 8m\n9                   G.O.R.A.   2004   2004  8.0 66033    2h 7m\n10                 Vizontele   2001   2001  8.0 38403   1h 50m\n7    Bir Zamanlar Anadolu'da   2011   2011  7.8 49365   2h 37m\n\n\nThese are obviously not the highest rated movies of all the Turkish movies, so maybe the Top 1000 is dependent on popularity as well."
  }
]